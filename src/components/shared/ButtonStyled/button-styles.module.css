@property --rotate {
  syntax: "<angle>";
  initial-value: 0deg;
  inherits: false;
}

:root {
  --succesColor: #047857;
  --warringColor: #ca8a04;
  --dengerColor: #991b1b;
  --whiteColor: #f8fafc;
  --creamyColor: #d1d5db;

  ---conicColor1: rgba(18, 8, 126, 1);
  ---conicColor2: rgba(136, 136, 255, 1);
  ---conicColor3: rgba(26, 6, 56, 1);
}

/* ButtonStyled */

.mainStyles {
  display: inline-flex;
  position: relative;
  align-items: center;
  justify-content: center;
  gap: 0.5rem;
  z-index: 0;
  transition: all 0.3s;
  box-sizing: border-box;
}

/* sizing styles */

.xsStyles {
  padding: 0.25rem 0.5rem;
  font-size: 0.75rem;
}

.xsStyles::after,
.xsStyles::before {
  inset: -0.05rem;
}

.smStyles {
  padding: 0.5rem 1rem;
  font-size: 0.875rem;
}

.smStyles::after,
.smStyles::before {
  inset: -0.1rem;
}

.mdStyles {
  padding: 0.75rem 1.5rem;
  font-size: 1rem;
}

.mdStyles::after,
.mdStyles::before {
  inset: -0.15rem;
}

.lgStyles {
  padding: 1rem 2rem;
  font-size: 1.125rem;
}

.lgStyles::after,
.lgStyles::before {
  inset: -0.25rem;
}

/* sizing styles */

/* actions */

.cursorNotAllowed {
  cursor: not-allowed;
}

.cursorPointer {
  cursor: pointer;
}

/* actions */

/* types */

.success {
  background-color: var(--succesColor);
  color: var(--whiteColor);
}

.successBorder {
  border-width: 2px;
  border-color: var(--succesColor);
}

.successBorder:hover {
  border-color: var(--succesColor);
}

.warning {
  background-color: var(--warringColor);
  color: var(--whiteColor);
}

.warningBorder {
  border-width: 2px;
  border-color: var(--warringColor);
}

.warningBorder:hover {
  border-color: var(--warringColor);
}

.danger {
  background-color: var(--dengerColor);
  color: var(--creamyColor);
}

.dangerBorder {
  border-width: 2px;
  border-color: var(--dengerColor);
}

.dangerBorder:hover {
  border-color: var(--dengerColor);
}

/* types */

/* animated border */

.background {
  position: absolute;
  width: 100%;
  height: 100%;
  z-index: -1;
  border-radius: inherit;
  transition: all 0.3s ease-in-out;
}

.animatedBorder::after,
.animatedBorder::before {
  position: absolute;
  content: "";
  transition: all 0.3s ease-in-out;
  border-radius: inherit;
  z-index: -2;
  background: conic-gradient(
    from var(--rotate),
    var(---conicColor1),
    var(---conicColor2),
    var(---conicColor3),
    var(---conicColor2),
    var(---conicColor1)
  );
  animation: spin 15s linear infinite;
}

.animatedBorder::after {
  filter: blur(0.2rem);
}

/* animated border */

/* animated underline */

.animatedUnderline::after {
  position: absolute;
  content: "";
  width: 100%;
  transform: scale(0);
  height: 0.25rem;
  top: 100%;
  left: 0;
  right: 0;
  background-color: #60B239;
  transform-origin: bottom right;
  transition: transform 0.3s ease-in-out;
}

.animatedUnderline:hover::after {
  transform: scale(1);
  transform-origin: bottom left;
}

/* animated underline */

/* ripple styles */

.rippleEffectContainer {
  position: absolute;
  overflow: hidden;
  width: 100%;
  height: 100%;
  top: 0;
  left: 0;
  border-radius: inherit;
}

.rippleEffect {
  position: absolute;
  transform: translate(-50%, -50%);
  border-radius: 50%;
  animation: ripple 0.5s infinite ease-out;
}

/* ripple styles */

@keyframes spin {
  0% {
    --rotate: 0deg;
  }
  100% {
    --rotate: 360deg;
  }
}

@keyframes ripple {
  from {
    transform: scale(0);
    opacity: 0.5;
  }
  to {
    transform: scale(4);
    opacity: 0;
  }
}

/* ButtonStyled */
